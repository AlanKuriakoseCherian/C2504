P1. print series 10, 12, 14, 16, ... N terms 
    Q1: use for loop
----plan ps----
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    for I = 1; I <= numOfTerms ; I++ 
        Print term + ' '
        term = term + 2
    end for 
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)
----cs----
class Q01
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        for (int I = 1; I <= numOfTerms ; I++)
        {
            Console.Write($"{term} ");
            term = term + 2;
        }
    }

    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        TestPrintSeries10_12_14();
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

P1. print series 10, 12, 14, 16, ... N terms 
    Q2: use while looping
----plan ps----
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1
    while  I <= numOfTerms  
        Print term + ' '
        term = term + 2
        I++
    end while 
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)
----cs----
class Q02
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        while ( I <= numOfTerms  )
        {
            Console.Write($"{term} ");
            term = term + 2;
            I++;
        }
    }

    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        TestPrintSeries10_12_14();
        Console.ReadKey();
    }
}

P1. print series 10, 12, 14, 16, ... N terms 
    Q3: use do.while loop
----plan ps----
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1;
    do  
        if numOfTerms == 0
            break
        then   
        Print term + ' '
        term = term + 2
        I++
    end while I <= numOfTerms
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)
----cs----
class Q03
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        do 
        {
            if (0 == numOfTerms)
            {
                break;
            }
            Console.Write($"{term} ");
            term = term + 2;

            I++;
        } while (I <= numOfTerms) ;
    }

    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        TestPrintSeries10_12_14();
        Console.ReadKey();
    }
}

P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q4: use for loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    for I = 1; I <= N ; I++   
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1
    end for 
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm
    ----cs----
    class Q04
{
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        for (int I = 1; I <= N; I++) 
        {
            if( I == N )
            {
                break;
            }
            term = term + difference;
            difference = difference + 1;
        }
        return term;
    }

    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        TestGetNthTerm_21_22_24_27();
        Console.ReadKey();
    }
}

P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q5: use while loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    I = 1
    while  I <= N  
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1
        I++ 
    end while 
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm
----cs----
class Q05
{
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        while ( I <= N ) 
        {
            if( I == N )
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        }
        return term;
    }
    
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        TestGetNthTerm_21_22_24_27();
        Console.ReadKey();
    }
}

P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q5: use do..while loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    I = 1
    do  
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1

        I++ 
    while  I <= N  
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm
----cs explained----
class Q06
{
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        do
        {
            if (I == N)
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        } while (I <= N);
        return term;
    }

    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        TestGetNthTerm_21_22_24_27();
        Console.ReadKey();
    }
}

P3. print the following pattern 
        1
      1 2
    1 2 3
  1 2 3 4
1 2 3 4 5 
Here, N = number of lines = 5
    Q7: use for loop
    Q8: use while loop
    Q9: use do..while loop
----plan ps----
function PrintNumTriangleMirroredRightAngle(N)
function TestPrintNumTriangleMirroredRightAngle()
Here, 1. PrintNumTriangleMirroredRightAngle -> void, N -> int = number of lines 
      2. TestPrintNumTriangleMirroredRightAngle -> void 
----ps----
function PrintNumTriangleMirroredRightAngle(N) = 5
    for I = 1; I <= N; I++          
        for J = 1; J <= N-I; J++     
            Print "  "                 
        end for 
        for J = 1; J <= I; J++       
            Print J + " "           
        end for 
        Print NewLine 
    end for 
function TestPrintNumTriangleMirroredRightAngle()
    Input N 
    PrintNumTriangleMirroredRightAngle(N)

-----cs-------
class Q07
{
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        for(int I = 1; I <= N; I++ )
        { 
            for(int J = 1; J <= N-I; J++)
            {
                Console.Write("  "); //2 spaces
            }
            for(int J = 1; J <= I; J++)
            {
                Console.Write($"{J} ");//num and space
            }
            Console.WriteLine();//new line 
        }
    }

    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        TestPrintNumTriangleMirroredRightAngle();
        Console.ReadKey();
    }
}
